name: Releases

on:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write

env:
  DEFAULT_CRATE_NAME: transcriptio
  RUST_BACKTRACE: 1

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.release.outputs.upload_url }}
      release_created: ${{ steps.release.outputs.release_created }}
      tag_name: ${{ steps.release.outputs.tag_name }}
    steps:
      - uses: actions/checkout@v2
      - uses: google-github-actions/release-please-action@v3
        id: release
        with:
          command: manifest
          release-type: rust
          package-name: transcriptio-cli

  compile-artifacts:
    name: Generate Release Artifacts (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    if: ${{ needs.release.outputs.release_created }}
    needs:
      - release
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup Rust
        uses: dsherret/rust-toolchain-file@v1
      - name: Rust Cache
        uses: Swatinem/rust-cache@v2
      - name: Dist
        uses: actions-rs/cargo@v1
        with:
          command: xtask dist
      - name: Upload Release Artifact
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run:
          gh release upload ${{ needs.release.outputs.tag_name }} ./target/transcriptio.*.zip
